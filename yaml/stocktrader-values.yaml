#       Copyright 2017-2019 IBM Corp All Rights Reserved

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

# Default values for stocktrader.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  replicas: 1
  autoscale: false
  monitoring: false
  ingress: false
  healthCheck: false
  jsonLogging: false
portfolio:
  image:
    repository: ibmstocktrader/portfolio
    tag: latest
    privateRegistry:
      enabled: false
      credentials: regsec
  url: http://{{ .Release.Name }}-portfolio-service:9080/portfolio
stockQuote:
  image:
    repository: ibmstocktrader/stock-quote
    tag: latest
    privateRegistry:
      enabled: false
      credentials: regsec
  url: http://{{ .Release.Name }}-stock-quote-service:9080/stock-quote
  apiConnect: https://api.eu-gb.apiconnect.appdomain.cloud/jeffreybunaganhclcom-dev/sb/stocks
  # apiConnect: https://api.us.apiconnect.ibmcloud.com/jalcornusibmcom-dev/sb/stocks
  iexTrading: https://cloud.iexapis.com/stable/stock
  iexApiKey: pk_c367a17f95204ed496d9bb1256b8e774
trader:
  enabled: true
  image:
    repository: ibmstocktrader/trader
    tag: basicregistry
    privateRegistry:
      enabled: false
      credentials: regsec
tradr:
  enabled: false
  image:
    repository: ibmstocktrader/tradr
    tag: latest
messaging:
  enabled: true
  image:
    repository: ibmstocktrader/messaging
    tag: latest
    privateRegistry:
      enabled: false
      credentials: regsec
  notification:
    url: http://{{ .Release.Name }}-notification-service:9080/notification
notificationSlack:
  enabled: true
  image:
    repository: ibmstocktrader/notification-slack
    tag: latest
notificationTwitter:
  enabled: false
  image:
    repository: ibmstocktrader/notification-twitter
    tag: latest
tradeHistory:
  enabled: false
  image:
    repository: ibmstocktrader/trade-history
    tag: latest
  url: http://{{ .Release.Name }}-trade-history-service:9080/trade-history
looper:
  enabled: false
  image:
    repository: ibmstocktrader/looper
    tag: latest
  url: http://{{ .Release.Name }}-looper-service:9080/looper
jwt:
  issuer: http://stock-trader.ibm.com
  audience: stock-trader
oidc:
  name: IBMid
  issuer: https://idaas.iam.ibm.com
  token: https://idaas.iam.ibm.com/idaas/oidc/endpoint/default/token
  auth: https://idaas.iam.ibm.com/idaas/oidc/endpoint/default/authorize
  clientId: <your client id>
  clientSecret: <your client secret>
  key: blueidprod
  nodePort: <your ingress URL>
ingress:
  address: <your proxy node IP>:443
watson:
  id: apikey
  passwordOrApiKey: TD1Cx0ppdTLakzkJdRbRpSHaf0jHcBR6NL-mNqqMPqDo
  url: https://gateway-lon.watsonplatform.net/tone-analyzer/api/v3/tone?version=2017-09-21&sentences=false
db2:
  host: db2-releas-ibm-db2oltp-dev-db2
  port: 50000
  id: db2inst1
  password: db2inst1
  db: trader
odm:
  id: odmAdmin
  password: odmAdmin
  url: http://odm-release-ibm-odm-dev:9060/DecisionService/rest/v1/ICP_Trader_Dev_1/determineLoyalty
mq:
  host: mq-release-ibm-mq
  port: 1414
  id: app
  password:
  queueManager: mqrelease
  queue: NotificationQ
  channel: DEV.APP.SVRCONN
redis:
  urlWithCredentials: redis://redis-release-master:6379
  cacheInterval: 60
openwhisk:
  id: 3971be8c-74db-46bb-8f24-c91df76183d8
  password: GWO0JmQpoIFbNzkzqmuGhU1gMMTcGKLH73GiZsFuYpZf3fPWLXIlkxwSBiDH5XMt
  url: https://eu-gb.functions.cloud.ibm.com/api/v1/namespaces/jeffrey.bunagan%40hcl.com_dev/actions/stocktrader/PostLoyaltyLevelToSlack
twitter:
  consumerKey: <your consumer key>
  consumerSecret: <your consumer secret>
  accessToken: <your access token>
  accessTokenSecret: <your access token secret>
kafka:
  address: <your Kafka proxy service>:30000
  topic: stocktrader
  user: token
  apiKey: <your API key>
mongo:
  ip: <your Mongo IP>
  port: 27017
  user: <your Mongo user>
  password: <your Mongo password>
  database: <your Mongo database>
  authDB: <your Mongo auth database>
